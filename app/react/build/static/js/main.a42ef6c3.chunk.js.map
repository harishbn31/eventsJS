{"version":3,"sources":["form.js","table.js","navBar.js","Person/person.js","App.js","serviceWorker.js","index.js"],"names":["FormComp","react_default","a","createElement","reactstrap_es","className","type","name","id","placeholder","for","color","onClick","console","log","Component","Example","state","events","_this2","this","axios","get","then","res","data","setState","catch","err","map","event","index","key","description","eventDate","startDate","createdAt","_id","size","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","isOpen","BrowserRouter","light","expand","href","navbar","Link","to","nav","inNavbar","caret","right","divider","Route","exact","path","component","Login","defineProperty","Home","About","Topics","Custom","React","src_form","table_Example","_ref","match","concat","url","Topic","render","_ref2","params","topicId","person","click","age","children","BasicExample","persons","otherstate","showDiv","buttonHandler","newName","onChangeHandler","taget","value","toggleChange","does","delete","toConsumableArray","splice","style","backgroundColor","classes","length","push","navBar_Example","join","evn","Person_person","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mVAiDiBA,0LAtCX,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,IACrBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACFH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,QACdJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,cACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,KAAK,QACLC,KAAK,QACLC,GAAG,eACHC,YAAY,wBAIlBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOM,IAAI,mBAAX,YACAT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,KAAK,WACLC,KAAK,WACLC,GAAG,kBACHC,YAAY,eAIlBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQO,MAAM,UAAUC,QAAS,kBAAMC,QAAQC,IAAI,oBAAnD,YAGFb,EAAAC,EAAAC,cAACC,EAAA,EAAD,eAjCeW,+BCLJC,6MACnBC,MAAQ,CACNC,OAAQ,uFAEU,IAAAC,EAAAC,KAClBC,IAAMC,IAAN,gCACGC,KAAK,SAAAC,GACJ,IAAMN,EAASM,EAAIC,KACnBN,EAAKO,SAAS,CAAER,aACfS,MAAM,SAAAC,GAAG,OAAIf,QAAQC,IAAIc,sCAI9B,OACI3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBAGJF,EAAAC,EAAAC,cAAA,aACCiB,KAAKH,MAAMC,OAAOW,IAAI,SAACC,EAAOC,GAAR,OACrB9B,EAAAC,EAAAC,cAAA,MAAI6B,IAAKD,GACP9B,EAAAC,EAAAC,cAAA,UAAM4B,EAAM,GACZ9B,EAAAC,EAAAC,cAAA,UAAM2B,EAAMvB,MACZN,EAAAC,EAAAC,cAAA,UAAM2B,EAAMG,aACZhC,EAAAC,EAAAC,cAAA,UAAM2B,EAAMI,UAAU,GAAGC,WACzBlC,EAAAC,EAAAC,cAAA,UAAM2B,EAAMM,WACZnC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,GAAIsB,EAAMO,IAAMC,KAAK,KAAK3B,MAAM,QAAxC,UAA+D,IAC/DV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,GAAIsB,EAAMO,IAAKC,KAAK,KAAK3B,MAAM,UAAvC,uBAnCuBI,aCaZC,cACjB,SAAAA,EAAYuB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArB,KAAAJ,IACjBwB,EAAAC,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAzB,GAAA6B,KAAAzB,KAAMmB,KAEDO,OAASN,EAAKM,OAAOC,KAAZN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACdA,EAAKvB,MAAQ,CACXgC,QAAQ,GALOT,wEASjBpB,KAAKM,SAAS,CACZuB,QAAS7B,KAAKH,MAAMgC,0CAItB,OACEhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACAjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQO,MAAM,QAAQwC,OAAK,EAACC,OAAO,MACjCnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaiD,KAAK,SAAlB,eACApD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeQ,QAASQ,KAAK0B,SAC7B7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU6C,OAAQ7B,KAAKH,MAAMgC,OAAQK,QAAM,GACzCrD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAUiD,QAAM,GAC7BrD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASiD,KAAK,KAAd,SAEApD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASiD,KAAK,UAAd,UAEFpD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAMC,GAAG,WAAT,WAEFvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASiD,KAAK,WAAd,WAEFpD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASiD,KAAK,UAAd,UAEFpD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAsBqD,KAAG,EAACC,UAAQ,GAChCzD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBqD,KAAG,EAACE,OAAK,GAAzB,SAGA1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcwD,OAAK,GACjB3D,EAAAC,EAAAC,cAACC,EAAA,EAAD,eAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,qBAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcyD,SAAO,IACrB5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,oBAQZH,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtCjE,EAAAC,EAAAC,cAAC2D,EAAA,EAADrB,OAAA0B,EAAA,EAAA1B,CAAA,CAAOsB,OAAK,EAACC,KAAK,IAAIC,UAAWG,GAAjC,aACAnE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWI,IAChCpE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWK,IACjCrE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWM,aA9DJC,IAAMzD,WAoEnCmD,cACJ,SAAAA,EAAY3B,GAAM,IAAApB,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAArB,KAAA8C,IAChB/C,EAAAsB,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAyB,GAAArB,KAAAzB,KAAMmB,KACDtB,MAAQ,GAFGE,wEAOhB,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsE,EAAD,cAVYD,IAAMzD,WAgC1B,SAASqD,IACP,OACEnE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACuE,EAAD,OAIL,SAASH,IACP,OACEtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BAKN,SAASkE,IACP,OACEpE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qBAKN,SAASmE,EAATK,GAA2B,IAATC,EAASD,EAATC,MAChB,OACE3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAMC,GAAE,GAAAqB,OAAKD,EAAME,IAAX,eAAR,yBAEF7E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAMC,GAAE,GAAAqB,OAAKD,EAAME,IAAX,gBAAR,eAEF7E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAMC,GAAE,GAAAqB,OAAKD,EAAME,IAAX,mBAAR,oBAIJ7E,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOE,KAAI,GAAAa,OAAKD,EAAMZ,KAAX,aAA4BC,UAAWc,IAClD9E,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OAAK,EACLC,KAAMY,EAAMZ,KACZgB,OAAQ,kBAAM/E,EAAAC,EAAAC,cAAA,wCAMtB,SAAS4E,EAATE,GAA0B,IAATL,EAASK,EAATL,MACf,OACE3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKyE,EAAMM,OAAOC,oBChKfC,EATA,SAAC7C,GACR,OACItC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,KAAGS,QAAS2B,EAAM8C,OAAlB,eAAsC9C,EAAMhC,KAA5C,QAAuDgC,EAAM+C,KAC7DrF,EAAAC,EAAAC,cAAA,YAAOoC,EAAMgD,UACbtF,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WC+GbkF,6MAtFbvE,MAAQ,CACNwE,QAAS,CACP,CAAClF,KAAM,UAAW+E,IAAK,IACvB,CAAC/E,KAAM,UAAW+E,IAAK,IACvB,CAAC/E,KAAM,UAAW+E,IAAK,IACvB,CAAC/E,KAAM,WAAY+E,IAAK,IAE1BI,WAAY,kBACZC,SAAS,KAEXC,cAAgB,SAACC,GACfrD,EAAKd,SAAS,CACZ+D,QAAQ,CAAE,CAAClF,KAAMsF,EAASP,IAAK,IAC/B,CAAC/E,KAAM,QAAS+E,IAAK,IACrB,CAAC/E,KAAM,MAAO+E,IAAK,IACnB,CAAC/E,KAAM,WAAY+E,IAAK,KAG1BI,WAAY,mBAOdI,gBAAkB,SAAChE,GACjBU,EAAKd,SAAS,CACZ+D,QAAQ,CACR,CAAClF,KAAM,UAAW+E,IAAK,IACvB,CAAC/E,KAAMuB,EAAMiE,MAAMC,MAAOV,IAAK,IAC/B,CAAC/E,KAAM,UAAW+E,IAAK,IACvB,CAAC/E,KAAM,WAAY+E,IAAK,KAE1BI,WAAY,sBAIdO,aAAe,WACb,IAAMC,EAAO1D,EAAKvB,MAAM0E,QACxBnD,EAAKd,SAAS,CAACiE,SAAUO,OAE3BC,OAAS,SAACf,EAAOrD,GAIf,IAAM0D,EAAOhD,OAAA2D,EAAA,EAAA3D,CAAOD,EAAKvB,MAAMwE,SAC/BA,EAAQY,OAAOtE,EAAM,GACrBS,EAAKd,SAAS,CAAC+D,QAASA,6EAEjB,IAAAtE,EAAAC,KACDkF,EAAQ,CACZC,gBAAiB,UAGfd,EAAU,KACXrE,KAAKH,MAAM0E,UACZF,EACExF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,4BAGJmG,EAAMC,gBAAkB,SAE1B,IAAIC,EAAU,GAOV,OANDpF,KAAKH,MAAMwE,QAAQgB,QAAS,GAC7BD,EAAQE,KAAK,OAEZtF,KAAKH,MAAMwE,QAAQgB,QAAU,GAC9BD,EAAQE,KAAK,QAGTzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,MAAIE,UAAWmG,EAAQI,KAAK,MAA5B,2BACA3G,EAAAC,EAAAC,cAAA,UAASS,QAAS,SAACiG,GAAD,OAAS1F,EAAKyE,cAAc,WAA9C,eACCxE,KAAKH,MAAMwE,QAAQ5D,IAAI,SAACuD,EAAOrD,GAAR,OACpB9B,EAAAC,EAAAC,cAAC2G,EAAD,CAAQ9E,IAAKD,EAAQsD,MAAO,kBAAMlE,EAAKgF,OAAOf,EAAOrD,IAAQxB,KAAM6E,EAAO7E,KAAM+E,IAAKF,EAAOE,QAGhGrF,EAAAC,EAAAC,cAAA,UAAQmG,MAAOA,EAAO1F,QAASQ,KAAK6E,aAAalD,KAAK3B,OAAtD,iBACAqE,UAjFejB,IAAMzD,WCnBbgG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStC,MACvB,2DCXNuC,IAASnC,OAAO/E,EAAAC,EAAAC,cAACiH,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlG,KAAK,SAAAmG,GACjCA,EAAaC","file":"static/js/main.a42ef6c3.chunk.js","sourcesContent":["\n  import React, { Component } from 'react';\n  import {\n    Container, Col, Form,\n    FormGroup, Label, Input,\n    Button,Row\n  } from 'reactstrap';\n  import './App.css';\n  \n  class FormComp extends Component {\n    render() {\n      return (\n        <Container className=\"\">\n        <Row>\n            <Col>\n          <h2>Sign In</h2>\n          <Form className=\"form\">\n            <Col>\n              <FormGroup>\n                <Label>Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"myemail@email.com\"\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <FormGroup>\n                <Label for=\"examplePassword\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"examplePassword\"\n                  placeholder=\"********\"\n                />\n              </FormGroup>\n            </Col>\n            <Button color=\"primary\" onClick={() => console.log('form submitted')}>Submit</Button>\n          </Form>\n          </Col>\n          <Col></Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n  \n  export default FormComp;","import React, { Component } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport axios from 'axios';\n\nexport default class Example extends Component {\n  state = {\n    events: []\n  }\n  componentDidMount() {\n    axios.get(`http://localhost:5000/events`)\n      .then(res => {\n        const events = res.data;\n        this.setState({ events });\n      }).catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n        <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Date</th>\n            <th>Created on</th>\n            <th> </th>\n          </tr>\n        </thead>\n        <tbody>\n        {this.state.events.map((event, index) => \n          <tr key={index}>\n            <td >{index+1}</td>\n            <td >{event.name}</td>\n            <td >{event.description}</td>\n            <td >{event.eventDate[0].startDate}</td>\n            <td >{event.createdAt}</td>\n            <td>\n              <Button id={event._id}  size=\"sm\" color=\"info\">Update</Button>{' '}\n              <Button id={event._id} size=\"sm\" color=\"danger\">Delete</Button>\n            </td>\n          </tr>\n        )}\n          \n        </tbody>\n      </Table>      \n    )\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\n\n    import FormComp from './form'\n    import Table from './table'\n    export default class Example extends React.Component {\n        constructor(props) {\n          super(props);\n      \n          this.toggle = this.toggle.bind(this);\n          this.state = {\n            isOpen: false\n          };\n        }\n        toggle() {\n          this.setState({\n            isOpen: !this.state.isOpen\n          });\n        }\n        render() {\n          return (\n            <Router>\n            <div>\n              <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/home\">DCT Academy</NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                  <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                    <NavLink href=\"/\">Home</NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink href=\"/about\">About</NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <Link to=\"/topics\" >Topics</Link>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink href=\"/custom\">Custom</NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink href=\"/login\">Login</NavLink>\n                    </NavItem>\n                    <UncontrolledDropdown nav inNavbar>\n                      <DropdownToggle nav caret>\n                        Links\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem>\n                          Events\n                        </DropdownItem>\n                        <DropdownItem>\n                          Registration\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem>\n                          Logout\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </Nav>\n                </Collapse>\n              </Navbar>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/\" component={Home} exact/>\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/topics\" component={Topics} />\n            <Route path=\"/custom\" component={Custom} />\n          </div>\n        </Router>\n          );\n        }\n      }\n      class Login extends React.Component {\n        constructor(props){\n          super(props);\n          this.state = {\n      \n          }\n        }\n        render(){\n          return(\n            <div>\n              <FormComp />\n            </div>\n          )\n          \n        }\n      }\n      // class Square extends React.Component {\n      //   constructor(props) {\n      //     super(props);\n      //     this.state = {\n      //       value: null,\n      //     };\n      //   }\n      \n      //   render() {\n      //     return (\n      //       <Button className=\"square\" onClick={() => alert('click')}>\n      //         {this.props.value}\n      //       Click Here</Button>\n      //     );\n      //   }\n      // }\n      function Home() {\n        return (\n          <div>\n           <h2>Events</h2>\n           <Table />\n          </div>\n        );\n      }\n      function Custom() {\n        return (\n          <div>\n            <h2>Custom Page</h2>\n          </div>\n        );\n      }\n      \n      function About() {\n        return (\n          <div>\n            <h2>About</h2>\n            <h3>Harish</h3>\n          </div>\n        );\n      }\n      \n      function Topics({ match }) {\n        return (\n          <div>\n            <h2>Topics</h2>\n            <ul>\n              <li>\n                <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n              </li>\n              <li>\n                <Link to={`${match.url}/components`}>Components</Link>\n              </li>\n              <li>\n                <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n              </li>\n            </ul>\n      \n            <Route path={`${match.path}/:topicId`} component={Topic} />\n            <Route\n              exact\n              path={match.path}\n              render={() => <h3>Please select a topic.</h3>}\n            />\n          </div>\n        );\n      }\n      \n      function Topic({ match }) {\n        return (\n          <div>\n            <h3>{match.params.topicId}</h3>\n          </div>\n        );\n      }","import React from \"react\";\nimport './Person.css'\nconst person = (props) => {\n        return(\n            <div className=\"Person\" >\n                <p onClick={props.click}>I am Person {props.name} age {props.age}</p>\n                <span>{props.children}</span>\n                <input type=\"text\"/>\n            </div>\n        ) \n}\nexport default person","import React from \"react\";\nimport Example from \"./navBar\";\nimport Person from \"./Person/person\"\nimport './App.css'\n// class BasicExample extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       buttons: []\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <button onClick={() => {\n//           this.setState(prevState => ({\n//             buttons: prevState.buttons.concat(1)\n//           }))\n//         }}> 1 </button> \n//        <button onClick={() => {\n//           this.setState(prevState => ({\n//             buttons: prevState.buttons.concat(2)\n//           }))\n//         }}> 2 </button> \n\n//         { this.state.buttons.map((button,i) => <li key={i}> {button} </li> )}\n//       </div>\n//     )\n//   }\n// }\n\nclass BasicExample extends React.Component {\n  state = {\n    persons: [\n      {name: \"person1\", age: 21},\n      {name: \"person2\", age: 22},\n      {name: \"person3\", age: 24},\n      {name: \"person 4\", age: 4}\n    ],\n    otherstate: \"some other name\",\n    showDiv: false\n  }\n  buttonHandler = (newName) => {\n    this.setState({\n      persons:[ {name: newName, age: 21},\n      {name: \"potte\", age: 18},\n      {name: \"max\", age: 24},\n      {name: \"person 4\", age: 44}\n\n    ],\n    otherstate: \"Yes changed\"\n    }\n    )\n    // this.setState(prevState => ({\n    //   check: !prevState.check\n    // }));\n  }\n  onChangeHandler = (event) => {\n    this.setState({\n      persons:[ \n      {name: 'person1', age: 21},\n      {name: event.taget.value, age: 18},\n      {name: \"person3\", age: 25},\n      {name: \"person 4\", age: 40}\n    ],\n    otherstate: \"Yes on changed\"\n    }\n    )\n  }\n  toggleChange = () => {\n    const does = this.state.showDiv\n    this.setState({showDiv: !does})\n  }\n  delete = (person,index) => {\n    // const persons = this.state.persons\n    // const persons = this.state.persons.slice()\n    // persons.splice(index,1)\n    const persons = [...this.state.persons]\n    persons.splice(index,1)\n    this.setState({persons: persons})\n  }\n  render() {\n    const style = {\n      backgroundColor: 'yellow'\n\n    }\n    let persons = null;\n    if(this.state.showDiv){\n      persons = (\n        <div className=\"to-show\">\n          <h3>Hello new div</h3>\n        </div>\n      )\n      style.backgroundColor = 'green';\n    }\n    let classes = [];\n    if(this.state.persons.length <=2){\n      classes.push('red');\n    }\n    if(this.state.persons.length <= 3){\n      classes.push('bold');\n    }\n        return (\n          <div>\n            <Example />\n            <h2 className={classes.join(' ')}>Welcome to React basics</h2>\n            <button  onClick={(evn) => this.buttonHandler(\"hello\")}>Switch Name</button>\n            {this.state.persons.map((person,index) => (\n                <Person key={index}  click={() => this.delete(person,index)} name={person.name} age={person.age}/>\n              )\n            )}\n            <button style={style} onClick={this.toggleChange.bind(this)}>toggle Change</button> \n           {persons}\n          </div>\n        )\n  }\n}\n\nexport default BasicExample;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}